{"version":3,"sources":["webpack:///./src/ui.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgC;;AAEhC;;AAEA;AACA;AACA,MAAM,mBAAO,CAAC,yCAAM;;AAEpB;;AAEA;AACA;AACA,uEAAuE,6CAAW;AAClF,6CAA6C,6CAAW;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;;AAEA;AACA,IAAI,sDAAoB;;AAExB;AACA;;AAEA;AACA;AACA,yEAAyE,6CAAW;AACpF,+CAA+C,6CAAW;AAC1D;AACA;AACA;;AAEA,eAAe,iBAAiB,GAAG,YAAY,GAAG,YAAY,GAAG,aAAa;;AAE9E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,qEAAmC;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;;AAEA;AACA,eAAe,2DAAyB;AACxC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,YAAY;AACZ;AACO;AACP,sBAAsB,yDAAuB;AAC7C;;AAEA;AACA,UAAU,OAAO;AACjB,YAAY;AACZ;AACO;AACP,sBAAsB,wDAAsB;AAC5C;;AAEA;AACA,UAAU,OAAO;AACjB,YAAY;AACZ;AACO;AACP,sBAAsB,yDAAuB;AAC7C;;AAEA;AACA,UAAU,IAAI;AACd,YAAY;AACZ;AACO;AACP,sBAAsB,mDAAiB;AACvC;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA,MAAM,mBAAO,CAAC,yCAAM;;AAEpB;;AAEA;;AAEA;AACA,gBAAgB,wDAAsB;AACtC;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;;AAEA;AACA,WAAW,2DAAyB;AACpC;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA","file":"0.bundle.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './ui_bg';\n\nconst __wbg_error_cc95a3d302735ca3_target = console.error;\n\nconst TextDecoder = typeof self === 'object' && self.TextDecoder\n    ? self.TextDecoder\n    : require('util').TextDecoder;\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbg_error_cc95a3d302735ca3(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    __wbg_error_cc95a3d302735ca3_target(varg0);\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nconst slab = [{ obj: undefined }, { obj: null }, { obj: true }, { obj: false }];\n\nlet slab_next = slab.length;\n\nfunction addHeapObject(obj) {\n    if (slab_next === slab.length) slab.push(slab.length + 1);\n    const idx = slab_next;\n    const next = slab[idx];\n\n    slab_next = next;\n\n    slab[idx] = { obj, cnt: 1 };\n    return idx << 1;\n}\n\nconst stack = [];\n\nfunction getObject(idx) {\n    if ((idx & 1) === 1) {\n        return stack[idx >> 1];\n    } else {\n        const val = slab[idx >> 1];\n\n        return val.obj;\n\n    }\n}\n\nexport function __widl_f_new_with_str_and_init_Request(arg0, arg1, arg2, exnptr) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    try {\n        return addHeapObject(new Request(varg0, getObject(arg2)));\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nexport function __widl_instanceof_Response(idx) {\n    return getObject(idx) instanceof Response ? 1 : 0;\n}\n\nconst __widl_f_json_Response_target = Response.prototype.json || function() {\n    throw new Error(`wasm-bindgen: Response.prototype.json does not exist`);\n};\n\nexport function __widl_f_json_Response(arg0, exnptr) {\n    try {\n        return addHeapObject(__widl_f_json_Response_target.call(getObject(arg0)));\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nexport function __widl_instanceof_Window(idx) {\n    return getObject(idx) instanceof Window ? 1 : 0;\n}\n\nconst __widl_f_fetch_with_request_Window_target = function(x0) {\n    return this.fetch(x0);\n};\n\nexport function __widl_f_fetch_with_request_Window(arg0, arg1) {\n    return addHeapObject(__widl_f_fetch_with_request_Window_target.call(getObject(arg0), getObject(arg1)));\n}\n\nexport function __wbg_newnoargs_b1f726fad978f5a3(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(new Function(varg0));\n}\n\nconst __wbg_call_fa7f0da29d7b9250_target = Function.prototype.call || function() {\n    throw new Error(`wasm-bindgen: Function.prototype.call does not exist`);\n};\n\nexport function __wbg_call_fa7f0da29d7b9250(arg0, arg1, exnptr) {\n    try {\n        return addHeapObject(__wbg_call_fa7f0da29d7b9250_target.call(getObject(arg0), getObject(arg1)));\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nconst __wbg_call_bd08bd79389c3e82_target = Function.prototype.call || function() {\n    throw new Error(`wasm-bindgen: Function.prototype.call does not exist`);\n};\n\nexport function __wbg_call_bd08bd79389c3e82(arg0, arg1, arg2, exnptr) {\n    try {\n        return addHeapObject(__wbg_call_bd08bd79389c3e82_target.call(getObject(arg0), getObject(arg1), getObject(arg2)));\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nexport function __wbg_new_70e5fc804058d6a0() {\n    return addHeapObject(new Object());\n}\n\nconst __wbg_set_3387446d3253486c_target = Reflect.set.bind(Reflect) || function() {\n    throw new Error(`wasm-bindgen: Reflect.set.bind(Reflect) does not exist`);\n};\n\nexport function __wbg_set_3387446d3253486c(arg0, arg1, arg2, exnptr) {\n    try {\n        return __wbg_set_3387446d3253486c_target(getObject(arg0), getObject(arg1), getObject(arg2)) ? 1 : 0;\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nconst __wbg_stringify_cc97edb3bc4849c0_target = JSON.stringify.bind(JSON) || function() {\n    throw new Error(`wasm-bindgen: JSON.stringify.bind(JSON) does not exist`);\n};\n\nexport function __wbg_stringify_cc97edb3bc4849c0(arg0, exnptr) {\n    try {\n        return addHeapObject(__wbg_stringify_cc97edb3bc4849c0_target(getObject(arg0)));\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nfunction getGlobalArgument(arg) {\n    const idx = globalArgumentPtr() / 4 + arg;\n    return getUint32Memory()[idx];\n}\n\nexport function __wbg_new_477a6c8ec5821b36(arg0) {\n    let cbarg0 = function(arg0, arg1) {\n        let a = this.a;\n        this.a = 0;\n        try {\n            return this.f(a, this.b, addHeapObject(arg0), addHeapObject(arg1));\n\n        } finally {\n            this.a = a;\n\n        }\n\n    };\n    cbarg0.f = wasm.__wbg_function_table.get(arg0);\n    cbarg0.a = getGlobalArgument(0);\n    cbarg0.b = getGlobalArgument(0 + 1);\n    try {\n        return addHeapObject(new Promise(cbarg0.bind(cbarg0)));\n    } finally {\n        cbarg0.a = cbarg0.b = 0;\n\n    }\n}\n\nconst __wbg_then_b902ad50736efa21_target = Promise.prototype.then || function() {\n    throw new Error(`wasm-bindgen: Promise.prototype.then does not exist`);\n};\n\nexport function __wbg_then_b902ad50736efa21(arg0, arg1, arg2) {\n    return addHeapObject(__wbg_then_b902ad50736efa21_target.call(getObject(arg0), getObject(arg1), getObject(arg2)));\n}\n\nconst __wbg_text_6ad386c63bfa0000_target = function(x0) {\n    return this.text(x0);\n};\n\nexport function __wbg_text_6ad386c63bfa0000(arg0, arg1, arg2) {\n    let varg1 = getStringFromWasm(arg1, arg2);\n    return addHeapObject(__wbg_text_6ad386c63bfa0000_target.call(getObject(arg0), varg1));\n}\n\nfunction dropRef(idx) {\n\n    idx = idx >> 1;\n    if (idx < 4) return;\n    let obj = slab[idx];\n\n    obj.cnt -= 1;\n    if (obj.cnt > 0) return;\n\n    // If we hit 0 then free up our space in the slab\n    slab[idx] = slab_next;\n    slab_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropRef(idx);\n    return ret;\n}\n/**\n* @param {number} arg0\n* @returns {any}\n*/\nexport function ui_category_delete(arg0) {\n    return takeObject(wasm.ui_category_delete(arg0));\n}\n\n/**\n* @param {number} arg0\n* @returns {any}\n*/\nexport function ui_product_delete(arg0) {\n    return takeObject(wasm.ui_product_delete(arg0));\n}\n\n/**\n* @param {number} arg0\n* @returns {any}\n*/\nexport function ui_supplier_delete(arg0) {\n    return takeObject(wasm.ui_supplier_delete(arg0));\n}\n\n/**\n* @param {any} arg0\n* @returns {any}\n*/\nexport function ui_show_list(arg0) {\n    return takeObject(wasm.ui_show_list(addHeapObject(arg0)));\n}\n\nexport function __wbindgen_object_clone_ref(idx) {\n    // If this object is on the stack promote it to the heap.\n    if ((idx & 1) === 1) return addHeapObject(getObject(idx));\n\n    // Otherwise if the object is on the heap just bump the\n    // refcount and move on\n    const val = slab[idx >> 1];\n    val.cnt += 1;\n    return idx;\n}\n\nexport function __wbindgen_object_drop_ref(i) {\n    dropRef(i);\n}\n\nexport function __wbindgen_string_new(p, l) {\n    return addHeapObject(getStringFromWasm(p, l));\n}\n\nexport function __wbindgen_number_get(n, invalid) {\n    let obj = getObject(n);\n    if (typeof(obj) === 'number') return obj;\n    getUint8Memory()[invalid] = 1;\n    return 0;\n}\n\nexport function __wbindgen_is_null(idx) {\n    return getObject(idx) === null ? 1 : 0;\n}\n\nexport function __wbindgen_is_undefined(idx) {\n    return getObject(idx) === undefined ? 1 : 0;\n}\n\nexport function __wbindgen_boolean_get(i) {\n    let v = getObject(i);\n    if (typeof(v) === 'boolean') {\n        return v ? 1 : 0;\n    } else {\n        return 2;\n    }\n}\n\nexport function __wbindgen_is_symbol(i) {\n    return typeof(getObject(i)) === 'symbol' ? 1 : 0;\n}\n\nconst TextEncoder = typeof self === 'object' && self.TextEncoder\n    ? self.TextEncoder\n    : require('util').TextEncoder;\n\nlet cachedEncoder = new TextEncoder('utf-8');\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    return [ptr, buf.length];\n}\n\nexport function __wbindgen_string_get(i, len_ptr) {\n    let obj = getObject(i);\n    if (typeof(obj) !== 'string') return 0;\n    const [ptr, len] = passStringToWasm(obj);\n    getUint32Memory()[len_ptr / 4] = len;\n    return ptr;\n}\n\nexport function __wbindgen_cb_drop(i) {\n    let obj = getObject(i).original;\n    obj.a = obj.b = 0;\n    dropRef(i);\n}\n\nexport function __wbindgen_closure_wrapper137(ptr, f, _ignored) {\n    let cb = function(arg0) {\n        let a = this.a;\n        this.a = 0;\n        try {\n            return this.f(a, addHeapObject(arg0));\n\n        } finally {\n            this.a = a;\n\n        }\n\n    };\n    cb.f = wasm.__wbg_function_table.get(f);\n    cb.a = ptr;\n    let real = cb.bind(cb);\n    real.original = cb;\n    return addHeapObject(real);\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n"],"sourceRoot":""}